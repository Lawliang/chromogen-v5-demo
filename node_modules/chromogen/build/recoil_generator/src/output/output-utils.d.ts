import type { SelectorUpdate, Transaction, AtomUpdate, SetTransaction, AtomFamilies, SelectorFamilies, SelectorFamilyUpdate } from '../types';
import { SerializableParam } from 'recoil';
export declare function initializeAtoms(state: AtomUpdate[], current: boolean): string;
export declare function assertState(updates: SelectorUpdate[]): string;
export declare function importRecoilState(keyArray: string[]): string;
export declare function importRecoilFamily(familyObj: AtomFamilies | SelectorFamilies<any, SerializableParam>): string;
export declare function writeableHook(keyArray: string[]): string;
export declare function readableHook(keyArray: string[]): string;
export declare function atomFamilyHook(transactionArray: Transaction[]): string;
export declare function selectorFamilyHook(selectorFamilyTracker: SelectorFamilies<any, SerializableParam>, isSettable: boolean): string;
export declare function returnWriteable(keyArray: string[]): string;
export declare function returnReadable(keyArray: string[]): string;
export declare function returnAtomFamily(transactionArray: Transaction[]): string;
export declare function returnSelectorFamily(selectorFamilyTracker: SelectorFamilies<any, SerializableParam>, isSettable: boolean): string;
export declare function initializeSelectors(initialRender: SelectorUpdate[]): string;
export declare function initializeSelectorFamilies(initialRenderFamilies: SelectorFamilyUpdate[]): string;
export declare function testSelectors(transactionArray: Transaction[]): string;
export declare function testSetters(setTransactionArray: SetTransaction[]): string;
