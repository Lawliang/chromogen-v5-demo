"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChromogenZustandObserver = void 0;
const Editor_1 = __importDefault(require("./Editor"));
const EditorTab_1 = __importDefault(require("./EditorTab"));
const react_1 = __importStar(require("react"));
const component_utils_1 = require("./component-utils");
const GlobalStyle_1 = __importDefault(require("../GlobalStyle"));
const panel = {
    display: 'flex',
    position: 'relative',
};
const ChromogenZustandObserver = ({ children }) => {
    const [code, setCode] = react_1.default.useState('');
    const [storeMap] = react_1.default.useState(new Map());
    const [isHidden, setIsHidden] = (0, react_1.useState)(false);
    const timer = setInterval(() => {
        console.log('Firing');
        setCode(String((0, component_utils_1.generateTests)(storeMap)));
    }, 1000);
    react_1.default.useEffect(() => {
        console.log(code);
        timer;
    }, [timer]);
    return (react_1.default.createElement("div", { style: panel },
        children,
        isHidden ? (react_1.default.createElement(EditorTab_1.default, { setIsHidden: setIsHidden, isHidden: isHidden })) : (react_1.default.createElement(Editor_1.default, { code: code, setIsHidden: setIsHidden, isHidden: isHidden })),
        react_1.default.createElement(GlobalStyle_1.default, null)));
};
exports.ChromogenZustandObserver = ChromogenZustandObserver;
