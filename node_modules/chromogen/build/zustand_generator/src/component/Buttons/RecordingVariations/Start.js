"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Start = (props) => {
    const [isHover, setIsHover] = (0, react_1.useState)(false);
    const handleMouseEnter = () => {
        setIsHover(true);
    };
    const handleMouseLeave = () => {
        setIsHover(false);
    };
    const startButtonShape = {
        display: 'flex',
        width: '252px',
        flexDirection: 'row',
        alignItems: 'center',
        position: 'absolute',
        justifyContent: 'center',
        height: '48px',
        borderRadius: '42px',
        padding: '14px 24px',
        columnGap: '16px',
        background: '#212121',
        border: '1px solid rgba(243, 246, 248, 0.1)',
        cursor: 'pointer',
        bottom: '20px',
    };
    const startButtonHover = {
        display: 'flex',
        flexDirection: 'row',
        alignItems: 'center',
        position: 'absolute',
        width: '252px',
        height: '48px',
        borderRadius: '42px',
        padding: '14px 24px',
        columnGap: '16px',
        justifyContent: 'center',
        background: '#1C1C1C',
        border: '1px solid rgba(243, 246, 248, 0.1)',
        cursor: 'pointer',
        bottom: '20px',
    };
    const startIcon = {
        width: '0',
        height: '0',
        borderTop: '8px solid transparent',
        borderBottom: '8px solid transparent',
        borderLeft: '16px solid rgba(243, 246, 248, 0.8)',
        flex: 'none',
        order: '0',
        flexGrow: '0',
        borderRadius: '2px',
    };
    const startText = {
        fontSize: '14px',
        lineHeight: '16px',
        color: '#F3F6F8',
        opacity: '0.8',
        flex: 'none',
        order: '1',
        flexGrow: '0',
    };
    return (react_1.default.createElement("button", { style: isHover ? startButtonShape : startButtonHover, onClick: props.handleClick, onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave },
        react_1.default.createElement("div", { style: startIcon }),
        react_1.default.createElement("div", { style: startText }, "Start recording")));
};
exports.default = Start;
