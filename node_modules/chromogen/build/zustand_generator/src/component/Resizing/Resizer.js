"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const ResizerStyle = styled_components_1.default.div `
  position: absolute;
  cursor: ew-resize;
  width: 2px;
  height: 100%;
  z-index: 1;
  left: -1;
  top: 0;
  &:hover {
    background: #4848be;
  }
`;
const Resizer = ({ onResize }) => {
    const [direction, setDirection] = (0, react_1.useState)('');
    const [mouseDown, setMouseDown] = (0, react_1.useState)(false);
    (0, react_1.useEffect)(() => {
        const handleMouseMove = (e) => {
            if (!direction)
                return;
            onResize(direction, e.movementX, e.movementY);
        };
        if (mouseDown) {
            window.addEventListener('mousemove', handleMouseMove);
        }
        return () => window.removeEventListener('mousemove', handleMouseMove);
    }, [mouseDown, direction, onResize]);
    (0, react_1.useEffect)(() => {
        const handleMouseUp = () => setMouseDown(false);
        window.addEventListener('mouseup', handleMouseUp);
        return () => window.removeEventListener('mouseup', handleMouseUp);
    }, []);
    const handleMouseDown = (direction) => {
        setDirection(direction);
        setMouseDown(true);
    };
    return react_1.default.createElement(ResizerStyle, { className: "left", onMouseDown: () => handleMouseDown('left') });
};
exports.default = Resizer;
